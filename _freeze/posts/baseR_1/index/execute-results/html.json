{
  "hash": "68f1e0f49a069500d13b791ba793a0aa",
  "result": {
    "markdown": "---\ntitle: \"Base R from A to Z: Introduction (1)\"\ndescription: \"Overview of preinstalled packages\"\ndate: \"2023-02-18\"\ncategories: [R]\ntoc: true\ntoc-depth: 4\n---\n\n\n### Introduction\n\nR has quite a rich standard library^[For the definition of a standard library, see: [https://en.wikipedia.org/wiki/Standard_library](https://en.wikipedia.org/wiki/Standard_library)], not just to process text, read and work with files, do parallel computing, but also a whole load of statistical functions, including simple neural networks, additive models, survival analysis, and three whole packages for plotting and graphics (`graphics` for base graphics, `grid`, and `lattice`). You can read about all functions in the R's standard library in the [R reference manual](https://cran.r-project.org/doc/manuals/r-release/fullrefman.pdf).\n\nThe disadvantage is that while R has a very large standard library, it doesn't use namespaces.\nDon't get me wrong, R has namespaces. Every package has a namespace. And R comes with a bunch of preinstalled packages.\nBut while some specialized statistical functions are in aptly named packages (`survival` for survival analysis), often a group of unrelated functions are grouped into a single namespace.\nThis presents a significant barrier when it comes to the discoverability of these functions.\nFor instance, consider Python. If you want to work with paths, you know that the functions will be in the [os.path](https://docs.python.org/3/library/os.path.html) module or in the [pathlib](https://docs.python.org/3/library/pathlib.html) module, if you want to go for an object-oriented way of handling paths. Additionally, Python's [documentation](https://docs.python.org/3/library/index.html) groups functions according to their usage.\nCompare this to the R's reference manual linked above.\nSo if you want to, for instance, know all the functions for text parsing, well good luck.\nYou will have to do a lot of contextualized searches through R's help system or find a book that does this for you.\nBut while there are books about some popular user-created packages, for instance, the [R markdown](https://bookdown.org/yihui/rmarkdown/) book, or books that serve as an in-depth exploration of R, such as [Advanced R](https://adv-r.hadley.nz/) or [R packages](https://r-pkgs.org/), there is no in-depth exploration of functions available in base R.\nThis often means that a lot of people will keep reinventing wheels or coming up with complicated solutions requiring one or even multiple packages when there is a more performant one-liner in base R available.\n\nThe purpose of this series is to explore functions in base R and later perhaps to create a book that will serve as additional documentation of functionalities available in base R.\n\n### Preinstalled packages\nR comes with a number of preinstalled packages, they are labelled as *base* and *recommended*:\n\n::: {.cell}\n\n```{.r .cell-code}\npackages = installed.packages() |>\n    as.data.frame() |>\n    subset(select=c(\"Package\", \"Priority\")) |>\n    unique() |>\n    split(formula(\"~Priority\"))\nsapply(packages, nrow)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       base recommended \n         14          15 \n```\n:::\n:::\n\nThe 14 *base* packages are usually the main workhorse of R, while the 15 *recommended* packages are predominantly of statistical nature. Do not expect the latest, fastest and most feature-full implementation of them, but it also means that if you need something like k-nearest-neighbours, you will find it in the R standard library, which is something that is not typically true for most programming languages.\n\nBecause of this, the packages have quite a variable number of objects.\nHere we don't count only functions, but also included example datasets or pre-set variables. For example `T` is an alias for `TRUE`, but you can easily change it such as by setting `T=FALSE`. So please don't use `T` in your scripts, interactive usage only.\n\nBefore we show the number of objects in each package, we define some helper functions, that way the code will be more readable.\n\n::: {.cell}\n\n```{.r .cell-code}\n# get object names from a packageright  \ngetObjects = function(name, all=TRUE){\n    getNamespace(name) |> ls(all.names=all)\n    }\n\n# count the number of objects in a package\ncountObjects = function(name, all=TRUE){\n    getObjects(name, all=all) |> length()\n    }\n\n# apply the countObjects on the `packages` objects defined above\nn_objects = sapply(packages, function(x){\n    x[,1] |> sapply(countObjects) |> sort(decreasing=TRUE)\n    })\nn_objects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$base\n     base     stats      grid   methods     tools     utils     tcltk  compiler \n     1370      1134       872       761       733       529       313       289 \ngrDevices  graphics  parallel   splines    stats4  datasets \n      254       170       145        50        30         3 \n\n$recommended\n    Matrix       nlme       mgcv   survival    lattice       MASS    cluster \n       996        607        495        421        289        232         91 \n codetools       boot    spatial      rpart    foreign       nnet      class \n        89         84         55         51         42         41         29 \nKernSmooth \n        27 \n```\n:::\n:::\n\n\nFor the packages labelled as `base`, the `base` package leads with 1370 objects. The majority of common operations are implemented in this package, from file-system operations, and text-parsing functions, but also mathematical functions like `min`, `mean` or set operations.\nThe second largest package is `stats`, which implements a large number of mathematical and statistical functions. The bread and butter statistical functions like `t.test`, `anova`, `lm` or a general-purpose optimization algorithm `optim` or functions to work with time-series data are all included in this package.\nThe third largest package is the `grid` package with 872 objects. `grid` is one of the alternatives to base graphics, which are implemented in the `graphics` package.\nSurprisingly, the `graphics` package has only 170 objects.\nOutside of `base`, `stats`, `tools` and `utils`, the packages starts to be more specialized and also smaller.\nThe packages `utils` and especially `tools` are already supposed to be specialized for making packages, but since making packages requires a lot of tooling, and this tooling often has quite a lot of utility, you might occasionally use functions from `tools`. `utils` on the other hand has kind of everything, from functions to make packages, download packages, spellchecker, but also functions like `help`, `head`, `read.table`. Classical *if you don't know where to put it, put it into utils*.\n\nIf we look at the packages labelled as `recommended`, the largest package is the `Matrix` package, which is the third overall package by size out of preinstalled packages.\nThe `Matrix` package implements several kinds of sparse matrices and operations on them. This is very important in linear algebra and statistics, as the solution of many statistical models often relies on eigenvalues.\n\n#### Exported functions\nYou might have noticed that I have shown objects using `ls()`.\nThis way, all objects, whether they are exported or not, are counted.\nAfter all, I don't remember reading about 145 functions in the `parallel` documentation, so something is off.\n\nIf we look only at exported objects, the situation would be like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_exported_objects = sapply(packages, function(x){\n    x[,1] |> sapply(\\(y){\n        getNamespaceExports(y) |> length()\n        }) |> sort(decreasing=TRUE)\n    })\nn_exported_objects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$base\n     base     stats   methods     tcltk     utils      grid grDevices     tools \n     1370       456       371       269       221       212       119       119 \n graphics  parallel    stats4   splines  compiler  datasets \n       88        33        28        13         9         0 \n\n$recommended\n    Matrix       mgcv    lattice       nlme       MASS   survival       boot \n       367        182        144        109         78         77         36 \n   spatial    cluster  codetools    foreign      class      rpart KernSmooth \n        25         24         19         17         15         14          7 \n      nnet \n         7 \n```\n:::\n:::\n\nWe can see that the number of objects changes drastically, although the `base` package remained unaltered.\nInterestingly, the package `datasets` doesn't have a single exported object.\nThis is because `datasets` consist only of datasets, which are loaded lazily.\nThat is until you use the dataset, it does not occupy the computer memory.\n\nNow, let's move to the core of the series, the `base` package.\n \n### Base R\nWe have explored the number of objects across preinstalled packages, but how many functions are in the *base* package? The core of *base R*?\n\n::: {.cell}\n\n```{.r .cell-code}\n# You can see a similar code in ?Filter examples\nfuns = Filter(is.function, sapply(\n    ls(baseenv(), all.names=TRUE), get, baseenv()\n    ))\nlength(funs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1325\n```\n:::\n:::\n\n\nQuite a lot, 1325 functions. However, a great deal of them are S3 methods.\nFor instance, there are 36 methods just for the S3 generic `print`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrep(\"print.\", baseenv() |> ls(all.names=TRUE),\n    value=TRUE, fixed=TRUE) |> length()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 36\n```\n:::\n:::\n\n\nThese methods are very important to seamlessly work with different S3 classes.\nAfter all, no one wants to call `print.foo(x)` and `print.bar(y)`, when we can just type `print(z)`.\nThis reduces typing for sure, but also decreases mental overload.\nIn fact, many R users do not know about S3 system, but the dispatch of various methods still work like magic.\nBut enough about S3. For the purpose of this exercise, these are not very interesting.\nMaybe in the future, we will explore what kind of S3 classes are defined in base R.\n\nTo filter the S3 methods, we can use `isS3method`. The only issue is that this function fails for any object starting with a dot. Bummer. Objects starting with a dot are typically considered hidden objects, which should not be used unless you know what you are doing (such as `.C` or `.Call`, which are important tools when writing packages). \n\n::: {.cell}\n\n```{.r .cell-code}\n# this would fail:\n# isS3method(\".C\")\n\nvisible = grep(\"^\\\\.\", names(funs), value=TRUE, invert=TRUE)\n\nnormal = Filter(Negate(isS3method), visible)\nnormal |> length()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 865\n```\n:::\n:::\n\nThis means that to explore all the functions in `base` package, we need to go through 865 functions.\n\nThere is a small caveat we have talked about before. `ls()` does not distinguish whether the functions are or are not exported.\nLuckily for us, we saw that all the functions in the `base` package are exported.\nBut just to be sure:\n\n::: {.cell}\n\n```{.r .cell-code}\n# helper, take a string instead of a function object\nis_function = function(name, env=baseenv()){\n    f = get(name, envir=env)\n    is.function(f)\n    }\n\nnormal = getNamespaceExports(\"base\") |>\n    Filter(f=is_function) |>\n    grep(pattern=\"^\\\\.\", value=TRUE, invert=TRUE) |>\n    Filter(f=Negate(isS3method)) |> sort()\nnormal |> length()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 865\n```\n:::\n:::\n\nUsing slightly different calls, we have arrived at the same number. Great!\n\n### What can you expect next?\nIn the following part of the series, we will start going through the functions alphabetically.\nAlthough when we will find a group of similar or related functions, we will describe them together, such as `sub` and `gsub`.\n\nWe will start with the special symbols or **operators**, make a small segway about different types of functions in R, like `.Primitive`, `.Internal`, and we will have to talk a bit more about the generics.\n\nI hope that you have found this small exploration of the preinstalled packages interesting and that you are as excited as me about continuing in this series.\n \n### List of functions in the `base` package\nWe will end with a list of all functions that we will go through in this series:\n\n<details>\n    <summary> Click to unroll </summary>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"-\"                              \":\"                             \n  [3] \"::\"                             \":::\"                           \n  [5] \"!\"                              \"!=\"                            \n  [7] \"(\"                              \"[\"                             \n  [9] \"[[\"                             \"[[<-\"                          \n [11] \"[<-\"                            \"{\"                             \n [13] \"@\"                              \"@<-\"                           \n [15] \"*\"                              \"/\"                             \n [17] \"&\"                              \"&&\"                            \n [19] \"%*%\"                            \"%/%\"                           \n [21] \"%%\"                             \"%in%\"                          \n [23] \"%o%\"                            \"%x%\"                           \n [25] \"^\"                              \"+\"                             \n [27] \"<\"                              \"<-\"                            \n [29] \"<<-\"                            \"<=\"                            \n [31] \"=\"                              \"==\"                            \n [33] \">\"                              \">=\"                            \n [35] \"|\"                              \"||\"                            \n [37] \"~\"                              \"$\"                             \n [39] \"$<-\"                            \"abbreviate\"                    \n [41] \"abs\"                            \"acos\"                          \n [43] \"acosh\"                          \"activeBindingFunction\"         \n [45] \"addNA\"                          \"addTaskCallback\"               \n [47] \"agrep\"                          \"agrepl\"                        \n [49] \"alist\"                          \"all\"                           \n [51] \"all.equal\"                      \"all.names\"                     \n [53] \"all.vars\"                       \"allowInterrupts\"               \n [55] \"any\"                            \"anyDuplicated\"                 \n [57] \"anyNA\"                          \"aperm\"                         \n [59] \"append\"                         \"apply\"                         \n [61] \"Arg\"                            \"args\"                          \n [63] \"array\"                          \"arrayInd\"                      \n [65] \"as.array\"                       \"as.call\"                       \n [67] \"as.character\"                   \"as.complex\"                    \n [69] \"as.data.frame\"                  \"as.Date\"                       \n [71] \"as.difftime\"                    \"as.double\"                     \n [73] \"as.environment\"                 \"as.expression\"                 \n [75] \"as.factor\"                      \"as.function\"                   \n [77] \"as.hexmode\"                     \"as.integer\"                    \n [79] \"as.list\"                        \"as.logical\"                    \n [81] \"as.matrix\"                      \"as.name\"                       \n [83] \"as.null\"                        \"as.numeric\"                    \n [85] \"as.numeric_version\"             \"as.octmode\"                    \n [87] \"as.ordered\"                     \"as.package_version\"            \n [89] \"as.pairlist\"                    \"as.POSIXct\"                    \n [91] \"as.POSIXlt\"                     \"as.qr\"                         \n [93] \"as.raw\"                         \"as.single\"                     \n [95] \"as.symbol\"                      \"as.table\"                      \n [97] \"as.vector\"                      \"asin\"                          \n [99] \"asinh\"                          \"asNamespace\"                   \n[101] \"asplit\"                         \"asS3\"                          \n[103] \"asS4\"                           \"assign\"                        \n[105] \"atan\"                           \"atan2\"                         \n[107] \"atanh\"                          \"attach\"                        \n[109] \"attachNamespace\"                \"attr\"                          \n[111] \"attr.all.equal\"                 \"attr<-\"                        \n[113] \"attributes\"                     \"attributes<-\"                  \n[115] \"autoload\"                       \"autoloader\"                    \n[117] \"backsolve\"                      \"baseenv\"                       \n[119] \"basename\"                       \"besselI\"                       \n[121] \"besselJ\"                        \"besselK\"                       \n[123] \"besselY\"                        \"beta\"                          \n[125] \"bindingIsActive\"                \"bindingIsLocked\"               \n[127] \"bindtextdomain\"                 \"bitwAnd\"                       \n[129] \"bitwNot\"                        \"bitwOr\"                        \n[131] \"bitwShiftL\"                     \"bitwShiftR\"                    \n[133] \"bitwXor\"                        \"body\"                          \n[135] \"body<-\"                         \"bquote\"                        \n[137] \"break\"                          \"browser\"                       \n[139] \"browserCondition\"               \"browserSetDebug\"               \n[141] \"browserText\"                    \"builtins\"                      \n[143] \"by\"                             \"bzfile\"                        \n[145] \"c\"                              \"call\"                          \n[147] \"callCC\"                         \"capabilities\"                  \n[149] \"casefold\"                       \"cat\"                           \n[151] \"cbind\"                          \"ceiling\"                       \n[153] \"char.expand\"                    \"character\"                     \n[155] \"charmatch\"                      \"charToRaw\"                     \n[157] \"chartr\"                         \"check_tzones\"                  \n[159] \"chkDots\"                        \"chol\"                          \n[161] \"chol2inv\"                       \"choose\"                        \n[163] \"class\"                          \"class<-\"                       \n[165] \"clearPushBack\"                  \"close\"                         \n[167] \"closeAllConnections\"            \"col\"                           \n[169] \"colMeans\"                       \"colnames\"                      \n[171] \"colnames<-\"                     \"colSums\"                       \n[173] \"commandArgs\"                    \"comment\"                       \n[175] \"comment<-\"                      \"complex\"                       \n[177] \"computeRestarts\"                \"conditionCall\"                 \n[179] \"conditionMessage\"               \"conflictRules\"                 \n[181] \"conflicts\"                      \"Conj\"                          \n[183] \"contributors\"                   \"cos\"                           \n[185] \"cosh\"                           \"cospi\"                         \n[187] \"crossprod\"                      \"Cstack_info\"                   \n[189] \"cummax\"                         \"cummin\"                        \n[191] \"cumprod\"                        \"cumsum\"                        \n[193] \"curlGetHeaders\"                 \"cut\"                           \n[195] \"data.class\"                     \"data.frame\"                    \n[197] \"data.matrix\"                    \"date\"                          \n[199] \"debug\"                          \"debuggingState\"                \n[201] \"debugonce\"                      \"default.stringsAsFactors\"      \n[203] \"delayedAssign\"                  \"deparse\"                       \n[205] \"deparse1\"                       \"det\"                           \n[207] \"detach\"                         \"determinant\"                   \n[209] \"dget\"                           \"diag\"                          \n[211] \"diag<-\"                         \"diff\"                          \n[213] \"difftime\"                       \"digamma\"                       \n[215] \"dim\"                            \"dim<-\"                         \n[217] \"dimnames\"                       \"dimnames<-\"                    \n[219] \"dir\"                            \"dir.create\"                    \n[221] \"dir.exists\"                     \"dirname\"                       \n[223] \"do.call\"                        \"dontCheck\"                     \n[225] \"double\"                         \"dput\"                          \n[227] \"dQuote\"                         \"drop\"                          \n[229] \"droplevels\"                     \"dump\"                          \n[231] \"duplicated\"                     \"dyn.load\"                      \n[233] \"dyn.unload\"                     \"dynGet\"                        \n[235] \"eapply\"                         \"eigen\"                         \n[237] \"emptyenv\"                       \"enc2native\"                    \n[239] \"enc2utf8\"                       \"encodeString\"                  \n[241] \"Encoding\"                       \"Encoding<-\"                    \n[243] \"endsWith\"                       \"enquote\"                       \n[245] \"env.profile\"                    \"environment\"                   \n[247] \"environment<-\"                  \"environmentIsLocked\"           \n[249] \"environmentName\"                \"errorCondition\"                \n[251] \"eval\"                           \"eval.parent\"                   \n[253] \"evalq\"                          \"exists\"                        \n[255] \"exp\"                            \"expand.grid\"                   \n[257] \"expm1\"                          \"expression\"                    \n[259] \"extSoftVersion\"                 \"factor\"                        \n[261] \"factorial\"                      \"fifo\"                          \n[263] \"file\"                           \"file.access\"                   \n[265] \"file.append\"                    \"file.choose\"                   \n[267] \"file.copy\"                      \"file.create\"                   \n[269] \"file.exists\"                    \"file.info\"                     \n[271] \"file.link\"                      \"file.mode\"                     \n[273] \"file.mtime\"                     \"file.path\"                     \n[275] \"file.remove\"                    \"file.rename\"                   \n[277] \"file.show\"                      \"file.size\"                     \n[279] \"file.symlink\"                   \"Filter\"                        \n[281] \"Find\"                           \"find.package\"                  \n[283] \"findInterval\"                   \"findPackageEnv\"                \n[285] \"findRestart\"                    \"floor\"                         \n[287] \"flush\"                          \"for\"                           \n[289] \"force\"                          \"forceAndCall\"                  \n[291] \"formals\"                        \"formals<-\"                     \n[293] \"format\"                         \"format.info\"                   \n[295] \"format.pval\"                    \"formatC\"                       \n[297] \"formatDL\"                       \"forwardsolve\"                  \n[299] \"function\"                       \"gamma\"                         \n[301] \"gc\"                             \"gc.time\"                       \n[303] \"gcinfo\"                         \"gctorture\"                     \n[305] \"gctorture2\"                     \"get\"                           \n[307] \"get0\"                           \"getAllConnections\"             \n[309] \"getCallingDLL\"                  \"getCallingDLLe\"                \n[311] \"getConnection\"                  \"getDLLRegisteredRoutines\"      \n[313] \"getElement\"                     \"geterrmessage\"                 \n[315] \"getExportedValue\"               \"getHook\"                       \n[317] \"getLoadedDLLs\"                  \"getNamespace\"                  \n[319] \"getNamespaceExports\"            \"getNamespaceImports\"           \n[321] \"getNamespaceInfo\"               \"getNamespaceName\"              \n[323] \"getNamespaceUsers\"              \"getNamespaceVersion\"           \n[325] \"getNativeSymbolInfo\"            \"getOption\"                     \n[327] \"getRversion\"                    \"getSrcLines\"                   \n[329] \"getTaskCallbackNames\"           \"gettext\"                       \n[331] \"gettextf\"                       \"getwd\"                         \n[333] \"gl\"                             \"globalCallingHandlers\"         \n[335] \"globalenv\"                      \"gregexec\"                      \n[337] \"gregexpr\"                       \"grep\"                          \n[339] \"grepl\"                          \"grepRaw\"                       \n[341] \"grouping\"                       \"gsub\"                          \n[343] \"gzcon\"                          \"gzfile\"                        \n[345] \"I\"                              \"iconv\"                         \n[347] \"iconvlist\"                      \"icuGetCollate\"                 \n[349] \"icuSetCollate\"                  \"identical\"                     \n[351] \"identity\"                       \"if\"                            \n[353] \"ifelse\"                         \"Im\"                            \n[355] \"importIntoEnv\"                  \"infoRDS\"                       \n[357] \"inherits\"                       \"integer\"                       \n[359] \"interaction\"                    \"interactive\"                   \n[361] \"intersect\"                      \"intToBits\"                     \n[363] \"intToUtf8\"                      \"inverse.rle\"                   \n[365] \"invisible\"                      \"invokeRestart\"                 \n[367] \"invokeRestartInteractively\"     \"is.array\"                      \n[369] \"is.atomic\"                      \"is.call\"                       \n[371] \"is.character\"                   \"is.complex\"                    \n[373] \"is.data.frame\"                  \"is.double\"                     \n[375] \"is.element\"                     \"is.environment\"                \n[377] \"is.expression\"                  \"is.factor\"                     \n[379] \"is.finite\"                      \"is.function\"                   \n[381] \"is.infinite\"                    \"is.integer\"                    \n[383] \"is.language\"                    \"is.list\"                       \n[385] \"is.loaded\"                      \"is.logical\"                    \n[387] \"is.matrix\"                      \"is.na\"                         \n[389] \"is.na<-\"                        \"is.name\"                       \n[391] \"is.nan\"                         \"is.null\"                       \n[393] \"is.numeric\"                     \"is.numeric_version\"            \n[395] \"is.object\"                      \"is.ordered\"                    \n[397] \"is.package_version\"             \"is.pairlist\"                   \n[399] \"is.primitive\"                   \"is.qr\"                         \n[401] \"is.R\"                           \"is.raw\"                        \n[403] \"is.recursive\"                   \"is.single\"                     \n[405] \"is.symbol\"                      \"is.table\"                      \n[407] \"is.unsorted\"                    \"is.vector\"                     \n[409] \"isa\"                            \"isatty\"                        \n[411] \"isBaseNamespace\"                \"isdebugged\"                    \n[413] \"isFALSE\"                        \"isIncomplete\"                  \n[415] \"isNamespace\"                    \"isNamespaceLoaded\"             \n[417] \"ISOdate\"                        \"ISOdatetime\"                   \n[419] \"isOpen\"                         \"isRestart\"                     \n[421] \"isS4\"                           \"isSeekable\"                    \n[423] \"isSymmetric\"                    \"isTRUE\"                        \n[425] \"jitter\"                         \"julian\"                        \n[427] \"kappa\"                          \"kronecker\"                     \n[429] \"l10n_info\"                      \"La_library\"                    \n[431] \"La_version\"                     \"La.svd\"                        \n[433] \"labels\"                         \"lapply\"                        \n[435] \"lazyLoad\"                       \"lazyLoadDBexec\"                \n[437] \"lazyLoadDBfetch\"                \"lbeta\"                         \n[439] \"lchoose\"                        \"length\"                        \n[441] \"length<-\"                       \"lengths\"                       \n[443] \"levels\"                         \"levels<-\"                      \n[445] \"lfactorial\"                     \"lgamma\"                        \n[447] \"libcurlVersion\"                 \"library\"                       \n[449] \"library.dynam\"                  \"library.dynam.unload\"          \n[451] \"licence\"                        \"license\"                       \n[453] \"list\"                           \"list.dirs\"                     \n[455] \"list.files\"                     \"list2DF\"                       \n[457] \"list2env\"                       \"load\"                          \n[459] \"loadedNamespaces\"               \"loadingNamespaceInfo\"          \n[461] \"loadNamespace\"                  \"local\"                         \n[463] \"lockBinding\"                    \"lockEnvironment\"               \n[465] \"log\"                            \"log10\"                         \n[467] \"log1p\"                          \"log2\"                          \n[469] \"logb\"                           \"logical\"                       \n[471] \"lower.tri\"                      \"ls\"                            \n[473] \"make.names\"                     \"make.unique\"                   \n[475] \"makeActiveBinding\"              \"Map\"                           \n[477] \"mapply\"                         \"margin.table\"                  \n[479] \"marginSums\"                     \"mat.or.vec\"                    \n[481] \"match\"                          \"match.arg\"                     \n[483] \"match.call\"                     \"match.fun\"                     \n[485] \"matrix\"                         \"max\"                           \n[487] \"max.col\"                        \"mean\"                          \n[489] \"mem.maxNSize\"                   \"mem.maxVSize\"                  \n[491] \"memCompress\"                    \"memDecompress\"                 \n[493] \"memory.profile\"                 \"merge\"                         \n[495] \"message\"                        \"mget\"                          \n[497] \"min\"                            \"missing\"                       \n[499] \"Mod\"                            \"mode\"                          \n[501] \"mode<-\"                         \"months\"                        \n[503] \"mostattributes<-\"               \"names\"                         \n[505] \"names<-\"                        \"namespaceExport\"               \n[507] \"namespaceImport\"                \"namespaceImportClasses\"        \n[509] \"namespaceImportFrom\"            \"namespaceImportMethods\"        \n[511] \"nargs\"                          \"nchar\"                         \n[513] \"ncol\"                           \"NCOL\"                          \n[515] \"Negate\"                         \"new.env\"                       \n[517] \"next\"                           \"NextMethod\"                    \n[519] \"ngettext\"                       \"nlevels\"                       \n[521] \"noquote\"                        \"norm\"                          \n[523] \"normalizePath\"                  \"nrow\"                          \n[525] \"NROW\"                           \"nullfile\"                      \n[527] \"numeric\"                        \"numeric_version\"               \n[529] \"numToBits\"                      \"numToInts\"                     \n[531] \"nzchar\"                         \"objects\"                       \n[533] \"oldClass\"                       \"oldClass<-\"                    \n[535] \"OlsonNames\"                     \"on.exit\"                       \n[537] \"open\"                           \"options\"                       \n[539] \"order\"                          \"ordered\"                       \n[541] \"outer\"                          \"package_version\"               \n[543] \"packageEvent\"                   \"packageHasNamespace\"           \n[545] \"packageNotFoundError\"           \"packageStartupMessage\"         \n[547] \"packBits\"                       \"pairlist\"                      \n[549] \"parent.env\"                     \"parent.env<-\"                  \n[551] \"parent.frame\"                   \"parse\"                         \n[553] \"parseNamespaceFile\"             \"paste\"                         \n[555] \"paste0\"                         \"path.expand\"                   \n[557] \"path.package\"                   \"pcre_config\"                   \n[559] \"pipe\"                           \"plot\"                          \n[561] \"pmatch\"                         \"pmax\"                          \n[563] \"pmax.int\"                       \"pmin\"                          \n[565] \"pmin.int\"                       \"polyroot\"                      \n[567] \"pos.to.env\"                     \"Position\"                      \n[569] \"pretty\"                         \"prettyNum\"                     \n[571] \"print\"                          \"prmatrix\"                      \n[573] \"proc.time\"                      \"prod\"                          \n[575] \"prop.table\"                     \"proportions\"                   \n[577] \"provideDimnames\"                \"psigamma\"                      \n[579] \"pushBack\"                       \"pushBackLength\"                \n[581] \"q\"                              \"qr\"                            \n[583] \"qr.coef\"                        \"qr.fitted\"                     \n[585] \"qr.Q\"                           \"qr.qty\"                        \n[587] \"qr.qy\"                          \"qr.R\"                          \n[589] \"qr.resid\"                       \"qr.solve\"                      \n[591] \"qr.X\"                           \"quarters\"                      \n[593] \"quit\"                           \"quote\"                         \n[595] \"R_system_version\"               \"R.home\"                        \n[597] \"R.Version\"                      \"range\"                         \n[599] \"rank\"                           \"rapply\"                        \n[601] \"raw\"                            \"rawConnection\"                 \n[603] \"rawConnectionValue\"             \"rawShift\"                      \n[605] \"rawToBits\"                      \"rawToChar\"                     \n[607] \"rbind\"                          \"rcond\"                         \n[609] \"Re\"                             \"read.dcf\"                      \n[611] \"readBin\"                        \"readChar\"                      \n[613] \"readline\"                       \"readLines\"                     \n[615] \"readRDS\"                        \"readRenviron\"                  \n[617] \"Recall\"                         \"Reduce\"                        \n[619] \"reg.finalizer\"                  \"regexec\"                       \n[621] \"regexpr\"                        \"registerS3method\"              \n[623] \"registerS3methods\"              \"regmatches\"                    \n[625] \"regmatches<-\"                   \"remove\"                        \n[627] \"removeTaskCallback\"             \"rep\"                           \n[629] \"rep_len\"                        \"rep.int\"                       \n[631] \"repeat\"                         \"replace\"                       \n[633] \"replicate\"                      \"require\"                       \n[635] \"requireNamespace\"               \"restartDescription\"            \n[637] \"restartFormals\"                 \"retracemem\"                    \n[639] \"return\"                         \"returnValue\"                   \n[641] \"rev\"                            \"rle\"                           \n[643] \"rm\"                             \"RNGkind\"                       \n[645] \"RNGversion\"                     \"round\"                         \n[647] \"row\"                            \"row.names\"                     \n[649] \"row.names<-\"                    \"rowMeans\"                      \n[651] \"rownames\"                       \"rownames<-\"                    \n[653] \"rowsum\"                         \"rowSums\"                       \n[655] \"sample\"                         \"sample.int\"                    \n[657] \"sapply\"                         \"save\"                          \n[659] \"save.image\"                     \"saveRDS\"                       \n[661] \"scale\"                          \"scan\"                          \n[663] \"search\"                         \"searchpaths\"                   \n[665] \"seek\"                           \"seq\"                           \n[667] \"seq_along\"                      \"seq_len\"                       \n[669] \"seq.int\"                        \"sequence\"                      \n[671] \"serialize\"                      \"serverSocket\"                  \n[673] \"set.seed\"                       \"setdiff\"                       \n[675] \"setequal\"                       \"setHook\"                       \n[677] \"setNamespaceInfo\"               \"setSessionTimeLimit\"           \n[679] \"setTimeLimit\"                   \"setwd\"                         \n[681] \"showConnections\"                \"shQuote\"                       \n[683] \"sign\"                           \"signalCondition\"               \n[685] \"signif\"                         \"simpleCondition\"               \n[687] \"simpleError\"                    \"simpleMessage\"                 \n[689] \"simpleWarning\"                  \"simplify2array\"                \n[691] \"sin\"                            \"single\"                        \n[693] \"sinh\"                           \"sink\"                          \n[695] \"sink.number\"                    \"sinpi\"                         \n[697] \"slice.index\"                    \"socketAccept\"                  \n[699] \"socketConnection\"               \"socketSelect\"                  \n[701] \"socketTimeout\"                  \"solve\"                         \n[703] \"sort\"                           \"sort.int\"                      \n[705] \"sort.list\"                      \"source\"                        \n[707] \"split\"                          \"split<-\"                       \n[709] \"sprintf\"                        \"sqrt\"                          \n[711] \"sQuote\"                         \"srcfile\"                       \n[713] \"srcfilealias\"                   \"srcfilecopy\"                   \n[715] \"srcref\"                         \"standardGeneric\"               \n[717] \"startsWith\"                     \"stderr\"                        \n[719] \"stdin\"                          \"stdout\"                        \n[721] \"stop\"                           \"stopifnot\"                     \n[723] \"storage.mode\"                   \"storage.mode<-\"                \n[725] \"str2expression\"                 \"str2lang\"                      \n[727] \"strftime\"                       \"strptime\"                      \n[729] \"strrep\"                         \"strsplit\"                      \n[731] \"strtoi\"                         \"strtrim\"                       \n[733] \"structure\"                      \"strwrap\"                       \n[735] \"sub\"                            \"subset\"                        \n[737] \"substitute\"                     \"substr\"                        \n[739] \"substr<-\"                       \"substring\"                     \n[741] \"substring<-\"                    \"sum\"                           \n[743] \"summary\"                        \"suppressMessages\"              \n[745] \"suppressPackageStartupMessages\" \"suppressWarnings\"              \n[747] \"suspendInterrupts\"              \"svd\"                           \n[749] \"sweep\"                          \"switch\"                        \n[751] \"sys.call\"                       \"sys.calls\"                     \n[753] \"Sys.chmod\"                      \"Sys.Date\"                      \n[755] \"sys.frame\"                      \"sys.frames\"                    \n[757] \"sys.function\"                   \"Sys.getenv\"                    \n[759] \"Sys.getlocale\"                  \"Sys.getpid\"                    \n[761] \"Sys.glob\"                       \"Sys.info\"                      \n[763] \"sys.load.image\"                 \"Sys.localeconv\"                \n[765] \"sys.nframe\"                     \"sys.on.exit\"                   \n[767] \"sys.parent\"                     \"sys.parents\"                   \n[769] \"Sys.readlink\"                   \"sys.save.image\"                \n[771] \"Sys.setenv\"                     \"Sys.setFileTime\"               \n[773] \"Sys.setlocale\"                  \"Sys.sleep\"                     \n[775] \"sys.source\"                     \"sys.status\"                    \n[777] \"Sys.time\"                       \"Sys.timezone\"                  \n[779] \"Sys.umask\"                      \"Sys.unsetenv\"                  \n[781] \"Sys.which\"                      \"system\"                        \n[783] \"system.file\"                    \"system.time\"                   \n[785] \"system2\"                        \"t\"                             \n[787] \"table\"                          \"tabulate\"                      \n[789] \"tan\"                            \"tanh\"                          \n[791] \"tanpi\"                          \"tapply\"                        \n[793] \"taskCallbackManager\"            \"tcrossprod\"                    \n[795] \"tempdir\"                        \"tempfile\"                      \n[797] \"textConnection\"                 \"textConnectionValue\"           \n[799] \"tolower\"                        \"topenv\"                        \n[801] \"toString\"                       \"toupper\"                       \n[803] \"trace\"                          \"traceback\"                     \n[805] \"tracemem\"                       \"tracingState\"                  \n[807] \"transform\"                      \"trigamma\"                      \n[809] \"trimws\"                         \"trunc\"                         \n[811] \"truncate\"                       \"try\"                           \n[813] \"tryCatch\"                       \"tryInvokeRestart\"              \n[815] \"typeof\"                         \"unclass\"                       \n[817] \"undebug\"                        \"union\"                         \n[819] \"unique\"                         \"units\"                         \n[821] \"units<-\"                        \"unix.time\"                     \n[823] \"unlink\"                         \"unlist\"                        \n[825] \"unloadNamespace\"                \"unlockBinding\"                 \n[827] \"unname\"                         \"unserialize\"                   \n[829] \"unsplit\"                        \"untrace\"                       \n[831] \"untracemem\"                     \"unz\"                           \n[833] \"upper.tri\"                      \"url\"                           \n[835] \"UseMethod\"                      \"utf8ToInt\"                     \n[837] \"validEnc\"                       \"validUTF8\"                     \n[839] \"vapply\"                         \"vector\"                        \n[841] \"Vectorize\"                      \"warning\"                       \n[843] \"warningCondition\"               \"warnings\"                      \n[845] \"weekdays\"                       \"which\"                         \n[847] \"which.max\"                      \"which.min\"                     \n[849] \"while\"                          \"with\"                          \n[851] \"withAutoprint\"                  \"withCallingHandlers\"           \n[853] \"within\"                         \"withRestarts\"                  \n[855] \"withVisible\"                    \"write\"                         \n[857] \"write.dcf\"                      \"writeBin\"                      \n[859] \"writeChar\"                      \"writeLines\"                    \n[861] \"xor\"                            \"xpdrows.data.frame\"            \n[863] \"xtfrm\"                          \"xzfile\"                        \n[865] \"zapsmall\"                      \n```\n:::\n:::\n\n</details>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}